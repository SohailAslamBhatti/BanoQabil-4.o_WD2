Perfect 👍 Here’s a **complete “Study Notes Document” in Markdown format** for all **35 JavaScript assignments**.
It contains:

* 📌 **Attractive headings & icons**
* 📝 **Explanations under each topic**
* 💻 **Code blocks** (copyable)
* 📚 Structured like proper **study notes**

---

# 📝 JavaScript Assignment – Q1 to Q35

**Submitted By:** Sohail Aslam Bhatt
**Class:** WD-2 (Summer Session) HMC 8-10 (Boys)
**Submitted To:** Sir Waqar Ahmed Rana

---

## ⚡ Assignment #1 – Check Even or Odd

### 📝 Explanation

This program checks if the entered number is **even** or **odd** by using the modulus operator `%`.

### 💻 Code

```javascript
let num = +prompt("Enter any number = ");
if(num % 2 === 0){
  console.log(num + " is EVEN");
} else {
  console.log(num + " is ODD");
}
```

---

## 🎂 Assignment #2 – Voting Eligibility

### 📝 Explanation

Checks if the person’s age is **eligible for voting** (must be 18 or older).

### 💻 Code

```javascript
let age = +prompt("Enter your age:");
if(age >= 18){
  console.log("You are eligible to vote.");
} else {
  console.log("You are NOT eligible to vote.");
}
```

---

## 🔢 Assignment #3 – Print Numbers from 1 to 10

### 📝 Explanation

This program uses a **for loop** to print numbers from 1 through 10.

### 💻 Code

```javascript
for(let i = 1; i <= 10; i++){
  console.log(i);
}
```

---

## ➗ Assignment #4 – Multiplication Table of 5

### 📝 Explanation

Displays the multiplication table of 5 using a loop.

### 💻 Code

```javascript
for(let i = 1; i <= 10; i++){
  console.log("5 x " + i + " = " + (5*i));
}
```

---

## ➕ Assignment #5 – Sum of First 10 Natural Numbers

### 📝 Explanation

Adds numbers from 1 to 10 using a loop and displays the total.

### 💻 Code

```javascript
let sum = 0;
for(let i = 1; i <= 10; i++){
  sum += i;
}
console.log("Sum = " + sum);
```

---

## 🌟 Assignment #6 – Factorial of a Number

### 📝 Explanation

Calculates factorial using multiplication in a loop.

### 💻 Code

```javascript
let num = 5, fact = 1;
for(let i = 1; i <= num; i++){
  fact *= i;
}
console.log("Factorial = " + fact);
```

---

## 🔄 Assignment #7 – Reverse a String

### 📝 Explanation

Takes input string and reverses it using `split()`, `reverse()`, and `join()`.

### 💻 Code

```javascript
let str = "hello";
let reversed = str.split("").reverse().join("");
console.log(reversed);
```

---

## 🆚 Assignment #8 – Find Largest of Three Numbers

### 📝 Explanation

Checks which number is largest among three inputs.

### 💻 Code

```javascript
let a=10, b=20, c=15;
if(a>b && a>c){
  console.log(a + " is largest");
} else if(b>c){
  console.log(b + " is largest");
} else {
  console.log(c + " is largest");
}
```

---

## 📅 Assignment #9 – Check Leap Year

### 📝 Explanation

A year is a leap year if it is divisible by 4 but not by 100, unless it is also divisible by 400.

### 💻 Code

```javascript
let year = 2024;
if((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)){
  console.log("Leap Year");
} else {
  console.log("Not a Leap Year");
}
```

---

## 🧮 Assignment #10 – Fibonacci Series

### 📝 Explanation

Generates Fibonacci numbers where each number is the sum of the two preceding ones.

### 💻 Code

```javascript
let n = 10, n1 = 0, n2 = 1;
for(let i=1; i<=n; i++){
  console.log(n1);
  let next = n1 + n2;
  n1 = n2;
  n2 = next;
}
```

---

## 📘 Assignment #11 – Check Prime Number

### 📝 Explanation

Checks whether a number is prime (only divisible by 1 and itself).

### 💻 Code

```javascript
let num = 7, isPrime = true;
for(let i = 2; i < num; i++){
  if(num % i === 0){
    isPrime = false;
    break;
  }
}
console.log(isPrime ? "Prime" : "Not Prime");
```

---

## 🔍 Assignment #12 – Find Smallest Number in Array

### 📝 Explanation

Loops through an array to find the smallest number.

### 💻 Code

```javascript
let arr = [10, 5, 8, 20, 2];
let min = arr[0];
for(let i=1; i<arr.length; i++){
  if(arr[i] < min){
    min = arr[i];
  }
}
console.log("Smallest = " + min);
```

---

## 📊 Assignment #13 – Find Largest Number in Array

### 📝 Explanation

Similar to the previous one, but finds the largest number.

### 💻 Code

```javascript
let arr = [10, 5, 8, 20, 2];
let max = arr[0];
for(let i=1; i<arr.length; i++){
  if(arr[i] > max){
    max = arr[i];
  }
}
console.log("Largest = " + max);
```

---

## 🔄 Assignment #14 – Palindrome Check

### 📝 Explanation

A palindrome is a word that reads the same forwards and backwards.

### 💻 Code

```javascript
let str = "madam";
let rev = str.split("").reverse().join("");
console.log(str === rev ? "Palindrome" : "Not Palindrome");
```

---

## ✨ Assignment #15 – Count Digits in Number

### 📝 Explanation

Uses a loop to count digits of a number.

### 💻 Code

```javascript
let num = 12345, count = 0;
while(num > 0){
  count++;
  num = Math.floor(num/10);
}
console.log("Digits = " + count);
```

---

Perfect 👍 Let’s continue from **Assignment #16 to #35** in the same **Study Notes Document** style.

---

# 📘 Assignment #16 – Find Prime Numbers

### 📝 Explanation

A **prime number** is only divisible by `1` and itself. This program checks and prints prime numbers up to a given limit.

### 💻 Code

```javascript
let n = 20;
for(let i = 2; i <= n; i++){
  let isPrime = true;
  for(let j = 2; j <= Math.sqrt(i); j++){
    if(i % j === 0){
      isPrime = false;
      break;
    }
  }
  if(isPrime) console.log(i);
}
```

---

# 📘 Assignment #17 – Palindrome Check

### 📝 Explanation

A **palindrome** is a word/number that reads the same backward (e.g., *madam*, *121*).

### 💻 Code

```javascript
let str = "madam";
let reversed = str.split("").reverse().join("");
if(str === reversed){
  console.log("Palindrome");
} else {
  console.log("Not a Palindrome");
}
```

---

# 📘 Assignment #18 – Armstrong Number Check

### 📝 Explanation

An **Armstrong number** is equal to the sum of its own digits raised to the power of the number of digits.

### 💻 Code

```javascript
let num = 153;
let digits = num.toString().split("");
let sum = digits.reduce((acc, d) => acc + Math.pow(+d, digits.length), 0);

if(sum === num){
  console.log(num + " is an Armstrong number");
} else {
  console.log(num + " is not an Armstrong number");
}
```

---

# 📘 Assignment #19 – Find GCD (HCF) of Two Numbers

### 📝 Explanation

The **Greatest Common Divisor (GCD)** is the largest number that divides both numbers.

### 💻 Code

```javascript
let a = 48, b = 18;
while(b !== 0){
  let temp = b;
  b = a % b;
  a = temp;
}
console.log("GCD = " + a);
```

---

# 📘 Assignment #20 – Find LCM of Two Numbers

### 📝 Explanation

The **Least Common Multiple (LCM)** is the smallest number divisible by both.

### 💻 Code

```javascript
let a = 12, b = 15;
let gcd = (x, y) => (!y ? x : gcd(y, x % y));
let lcm = (a * b) / gcd(a, b);
console.log("LCM = " + lcm);
```

---

# 📘 Assignment #21 – Count Vowels in a String

### 📝 Explanation

Counts how many vowels (`a, e, i, o, u`) appear in a string.

### 💻 Code

```javascript
let str = "Hello World";
let count = (str.match(/[aeiou]/gi) || []).length;
console.log("Vowel count = " + count);
```

---

# 📘 Assignment #22 – Count Words in a String

### 📝 Explanation

Splits string by spaces and counts words.

### 💻 Code

```javascript
let str = "JavaScript is awesome";
let words = str.trim().split(/\s+/).length;
console.log("Word count = " + words);
```

---

# 📘 Assignment #23 – Find Maximum in an Array

### 📝 Explanation

Finds the **largest element** in an array.

### 💻 Code

```javascript
let arr = [10, 25, 8, 99, 56];
console.log("Max = " + Math.max(...arr));
```

---

# 📘 Assignment #24 – Find Minimum in an Array

### 📝 Explanation

Finds the **smallest element** in an array.

### 💻 Code

```javascript
let arr = [10, 25, 8, 99, 56];
console.log("Min = " + Math.min(...arr));
```

---

# 📘 Assignment #25 – Sort an Array Ascending

### 📝 Explanation

Sorts an array in ascending order.

### 💻 Code

```javascript
let arr = [34, 7, 23, 32, 5];
arr.sort((a, b) => a - b);
console.log(arr);
```

---

# 📘 Assignment #26 – Sort an Array Descending

### 📝 Explanation

Sorts an array in descending order.

### 💻 Code

```javascript
let arr = [34, 7, 23, 32, 5];
arr.sort((a, b) => b - a);
console.log(arr);
```

---

# 📘 Assignment #27 – Remove Duplicates from Array

### 📝 Explanation

Removes repeated elements and keeps only unique values.

### 💻 Code

```javascript
let arr = [1, 2, 2, 3, 4, 4, 5];
let unique = [...new Set(arr)];
console.log(unique);
```

---

# 📘 Assignment #28 – Merge Two Arrays

### 📝 Explanation

Combines two arrays into one.

### 💻 Code

```javascript
let arr1 = [1, 2, 3];
let arr2 = [4, 5, 6];
let merged = [...arr1, ...arr2];
console.log(merged);
```

---

# 📘 Assignment #29 – Find Sum of Array Elements

### 📝 Explanation

Adds all elements in the array.

### 💻 Code

```javascript
let arr = [10, 20, 30];
let sum = arr.reduce((acc, val) => acc + val, 0);
console.log("Sum = " + sum);
```

---

# 📘 Assignment #30 – Find Average of Array Elements

### 📝 Explanation

Finds the average by dividing sum by length.

### 💻 Code

```javascript
let arr = [10, 20, 30];
let avg = arr.reduce((a, b) => a + b, 0) / arr.length;
console.log("Average = " + avg);
```

---

# 📘 Assignment #31 – Linear Search in Array

### 📝 Explanation

Searches for an element one by one.

### 💻 Code

```javascript
let arr = [3, 6, 9, 12];
let target = 9;
let found = arr.indexOf(target);
console.log(found !== -1 ? "Found" : "Not Found");
```

---

# 📘 Assignment #32 – Binary Search in Sorted Array

### 📝 Explanation

Performs efficient search in sorted array.

### 💻 Code

```javascript
let arr = [2, 4, 6, 8, 10, 12];
let target = 10;
let low = 0, high = arr.length - 1;
let found = false;

while(low <= high){
  let mid = Math.floor((low + high) / 2);
  if(arr[mid] === target){
    found = true;
    break;
  } else if(arr[mid] < target){
    low = mid + 1;
  } else {
    high = mid - 1;
  }
}
console.log(found ? "Found" : "Not Found");
```

---

# 📘 Assignment #33 – Swap Two Variables

### 📝 Explanation

Swaps two variable values using a temporary variable.

### 💻 Code

```javascript
let a = 5, b = 10;
let temp = a;
a = b;
b = temp;
console.log("a =", a, "b =", b);
```

---

# 📘 Assignment #34 – Reverse an Array

### 📝 Explanation

Reverses order of array elements.

### 💻 Code

```javascript
let arr = [1, 2, 3, 4, 5];
console.log(arr.reverse());
```

---

# 📘 Assignment #35 – Check Positive, Negative or Zero

### 📝 Explanation

Checks whether number is **positive**, **negative**, or **zero**.

### 💻 Code

```javascript
let num = -7;
if(num > 0){
  console.log("Positive");
} else if(num < 0){
  console.log("Negative");
} else {
  console.log("Zero");
}
```

---

